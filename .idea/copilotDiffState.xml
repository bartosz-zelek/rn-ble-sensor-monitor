<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/rnblesensormonitor/bluetooth/BleGattCallback.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/rnblesensormonitor/bluetooth/BleGattCallback.kt" />
              <option name="originalContent" value="package com.example.rnblesensormonitor.bluetooth&#10;&#10;import android.bluetooth.BluetoothGatt&#10;import android.bluetooth.BluetoothGattCallback&#10;import android.bluetooth.BluetoothProfile&#10;import android.util.Log&#10;import javax.inject.Inject&#10;&#10;class BleGattCallback @Inject constructor() : BluetoothGattCallback() {&#10;&#10;    override fun onConnectionStateChange(gatt: BluetoothGatt?, status: Int, newState: Int) {&#10;        if (newState == BluetoothProfile.STATE_CONNECTED) {&#10;            Log.d(&quot;BleGattCallback&quot;, &quot;Connected to GATT server.&quot;)&#10;        } else if (newState == BluetoothProfile.STATE_DISCONNECTED) {&#10;            Log.d(&quot;BleGattCallback&quot;, &quot;Disconnected from GATT server.&quot;)&#10;        }&#10;    }&#10;}&#10;&#10;&#10;" />
              <option name="updatedContent" value="package com.example.rnblesensormonitor.bluetooth&#10;&#10;import android.bluetooth.BluetoothGatt&#10;import android.bluetooth.BluetoothGattCallback&#10;import android.bluetooth.BluetoothProfile&#10;import android.content.Context&#10;import android.util.Log&#10;import android.widget.Toast&#10;import android.os.Handler&#10;import android.os.Looper&#10;import javax.inject.Inject&#10;import dagger.hilt.android.qualifiers.ApplicationContext&#10;&#10;class BleGattCallback @Inject constructor(&#10;    @ApplicationContext private val context: Context&#10;) : BluetoothGattCallback() {&#10;    private val mainHandler = Handler(Looper.getMainLooper())&#10;&#10;    override fun onConnectionStateChange(gatt: BluetoothGatt?, status: Int, newState: Int) {&#10;        val deviceName = gatt?.device?.name ?: gatt?.device?.address ?: &quot;device&quot;&#10;        if (newState == BluetoothProfile.STATE_CONNECTED) {&#10;            Log.d(&quot;BleGattCallback&quot;, &quot;Connected to GATT server.&quot;)&#10;            mainHandler.post { Toast.makeText(context, &quot;Connected to $deviceName&quot;, Toast.LENGTH_SHORT).show() }&#10;        } else if (newState == BluetoothProfile.STATE_DISCONNECTED) {&#10;            Log.d(&quot;BleGattCallback&quot;, &quot;Disconnected from GATT server.&quot;)&#10;            mainHandler.post { Toast.makeText(context, &quot;Disconnected from $deviceName&quot;, Toast.LENGTH_SHORT).show() }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>